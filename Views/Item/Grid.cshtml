@model ItemsViewModel

<h1 class="page-title">A Visual Display of Nutritional Products</h1>

<!-- Button Container for Table View -->
<div class="button-container">
    <a href="/Item/Table" title="Table View" class="view-switch-button">
        <img src="/images/table.png" alt="Table View" style="width: 30px; height: auto; vertical-align: middle;" />
    </a>
</div>

<style>
    /* Header styling */
    .page-title {
        font-size: 28px;
        color: #333;
        text-align: center;
        margin-top: 20px;
        margin-bottom: 20px;
        font-weight: bold;
    }

    /* Button container styling */
    .button-container {
        display: flex;
        justify-content: flex-start; /* Align buttons to the left */
        margin-bottom: 20px;
    }

    /* Styling for View Switch Button */
    .view-switch-button {
        display: inline-block;
        background-color: white;
        padding: 10px;
        border-radius: 5px;
        margin-right: 10px; /* Space between buttons */
        transition: background-color 0.3s;
    }

    .view-switch-button:hover {
        background-color: #f1f1f1; /* Slightly darker on hover */
    }

    /* Grid layout adjustments */
    .row-cols-md-3 {
        row-gap: 1.5rem;
    }

    /* Card styling */
    .card {
        border: 1px solid #ddd;
        border-radius: 10px;
        transition: transform 0.2s, box-shadow 0.2s;
        overflow: hidden;
        background-color: #fff; /* White background for cards */
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }

    /* Image styling within the card */
    .custom-image-size {
        width: 100%;
        height: auto;
        object-fit: contain;
        max-height: 200px;
        transition: transform 0.2s;
    }

    /* Card body styling */
    .card-body {
        padding: 1.25rem;
        text-align: center;
        background-color: #fafafa;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .card-text {
        color: #666;
        font-size: 0.9rem;
        margin-top: 0.5rem;
    }

    .card a {
        text-decoration: none;
        color: inherit;
    }

    .card a:hover {
        color: #4CAF50;
    }

    /* Keyhole icon */
    .keyhole-icon {
        width: 30px;
        height: auto;
        position: absolute;
        bottom: 10px;
        right: 10px;
    }

    /* Pagination Controls */
    .pagination-controls {
        margin-top: 20px;
        text-align: center;
    }

    /* Button styling */
    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        color: #fff;
        padding: 0.5rem 1.25rem;
        border-radius: 5px;
        font-weight: bold;
        transition: background-color 0.2s;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        border-color: #545b62;
    }

    /* Create New Item Button */
    .create-button-container {
        text-align: center;
        margin-top: 25px;
    }

    .create-button {
        padding: 10px 20px;
        background-color: #4CAF50;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
        transition: background-color 0.2s;
    }

    .create-button:hover {
        background-color: #45a049;
    }

    /* General styling */
    html {
        overflow-y: scroll;
        scroll-behavior: smooth;
    }

    main {
        min-height: 100vh;
        padding-bottom: 2rem;
    }

  /* Modal styles */
.modal {
    display: none; /* Hidden by default */
      justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
    position: fixed; /* Stay in place */
    z-index: 1000; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: hidden; /* Disable all scroll */
    background-color: rgba(0, 0, 0, 0.7); /* Darker background for better focus */
    padding-top: 150px; /* Space from the top */
}

.modal-content {
    background-color: #fff;
    margin: auto; /* Center the modal */
    padding: 30px; /* Increased padding for a spacious feel */
    border: none; /* No border */
    width: 80%; /* Wider width for larger screens */
    max-width: 800px; /* Increased maximum width for better manageability */
    height: 620px; /* Increased height for all modals */
    border-radius: 12px; /* Rounded corners for a modern look */
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5); /* Stronger shadow for depth */
    transition: all 0.3s ease; /* Smooth transition for all properties */
    overflow-y: auto; /* Enable vertical scrolling if content is too tall */
    overflow-x: hidden; /* Disable horizontal scrolling */
}

/* Product image styling */
.product-image {
    max-width: 100%;
    max-height: 300px; /* Adjust this value to control the image height */
    width: auto;
    height: auto;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
}

/* Keyhole icon */
.keyhole-icon {
    width: 30px;
    height: auto;
    position: absolute;
    bottom: 40px;
    right: 100px; 
}

/* Summary subtle style */
.summary-subtle {
    font-weight: bold;
    font-size: 1.1rem;
    cursor: pointer;
    margin-bottom: 10px;
    padding: 10px;
    color: #333;
    border-bottom: 1px solid #ccc;
    display: flex;
    justify-content: space-between;
    align-items: center;
}


</style>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var item in Model.Items)
    {
        <div class="col">
            <div class="card">
                <a href="javascript:void(0);" class="open-modal" data-item-id="@item.ItemId">
                    <img src="@item.ImageUrl" class="img-fluid custom-image-size" alt="@item.Name" />
                </a>
                <div class="card-body">
                    <a href="javascript:void(0);" class="open-modal" data-item-id="@item.ItemId">
                        <h5 class="card-title">@item.Name</h5>
                    </a>
                    <p class="card-text">Some nutritional information here</p>
                </div>
                @if (item.HasGreenKeyhole)
                {
                    <img src="~/images/green_keyhole.jpg" alt="NÃ¸kkelhullsmerke" class="keyhole-icon" />
                }
            </div>
        </div>
    }
</div>

<!-- Pagination Controls -->
<div class="pagination-controls text-center mt-4">
    @if (Model.CurrentPage > 1)
    {
        <a href="@Url.Action("Grid", new { page = Model.CurrentPage - 1 })" class="btn btn-secondary">Previous</a>
    }

    <span class="px-3">Page @Model.CurrentPage of @Model.TotalPages</span>

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a href="@Url.Action("Grid", new { page = Model.CurrentPage + 1 })" class="btn btn-secondary">Next</a>
    }
</div>

<!-- Create New Item Button -->
<div class="create-button-container">
    <a href="/Item/Create" class="create-button">Create New Item</a>
</div>

<!-- Modal -->
<div id="itemModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <div id="modalBody">
            <!-- Dynamic content will be loaded here -->
        </div>
    </div>
</div>

<script>
    var modal = document.getElementById("itemModal");
    var span = document.getElementsByClassName("close")[0];

    // Inserted JavaScript for handling modal links
    var modalLinks = document.querySelectorAll('.open-modal');
    modalLinks.forEach(link => {
        link.onclick = function() {
            var itemId = this.getAttribute('data-item-id');
            fetch(`/Item/Details/${itemId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text(); // This should return the partial view HTML
                })
                .then(data => {
                    document.getElementById("modalBody").innerHTML = data; // Load partial view content into the modal
                    modal.style.display = "block"; // Display the modal
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        }
    });

    // Close the modal when the close button is clicked
    span.onclick = function() {
        modal.style.display = "none";
    }

    // Close the modal when clicking outside of it
    window.onclick = function(event) {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    }
</script>
